Can you make this our UI Background 

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Live Cosmic Starfield</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body, html {
            height: 100%;
            overflow: hidden;
            background: #000;
        }

        .starfield {
            position: relative;
            width: 100%;
            height: 100vh;
            background: radial-gradient(ellipse at center, 
                #1a1a2e 0%, 
                #16213e 25%, 
                #0f1419 50%, 
                #000000 100%);
            overflow: hidden;
        }

        .nebula {
            position: absolute;
            width: 100%;
            height: 100%;
            background: 
                radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.3) 0%, transparent 50%),
                radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.2) 0%, transparent 50%),
                radial-gradient(circle at 40% 40%, rgba(120, 219, 255, 0.2) 0%, transparent 50%);
            animation: nebulaDrift 20s ease-in-out infinite alternate;
        }

        .star {
            position: absolute;
            background: white;
            border-radius: 50%;
            animation: twinkle 2s ease-in-out infinite alternate;
        }

        .star.small {
            width: 1px;
            height: 1px;
            box-shadow: 0 0 6px rgba(255, 255, 255, 0.8);
        }

        .star.medium {
            width: 2px;
            height: 2px;
            box-shadow: 0 0 10px rgba(255, 255, 255, 0.9);
        }

        .star.large {
            width: 3px;
            height: 3px;
            box-shadow: 0 0 15px rgba(255, 255, 255, 1);
        }

        .star.blue {
            background: #4FC3F7;
            box-shadow: 0 0 20px rgba(79, 195, 247, 0.8);
        }

        .star.bright {
            background: #FFE082;
            box-shadow: 0 0 25px rgba(255, 224, 130, 0.9);
            animation: brightTwinkle 1.5s ease-in-out infinite alternate;
        }

        .shooting-star {
            position: absolute;
            width: 2px;
            height: 2px;
            background: white;
            border-radius: 50%;
            box-shadow: 0 0 10px rgba(255, 255, 255, 0.8);
        }

        .shooting-star::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100px;
            height: 1px;
            background: linear-gradient(90deg, rgba(255, 255, 255, 0.8), transparent);
            transform: rotate(-45deg);
            transform-origin: 0 0;
        }

        .galaxy-cluster {
            position: absolute;
            width: 200px;
            height: 200px;
            background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, transparent 70%);
            border-radius: 50%;
            animation: galaxyRotate 30s linear infinite;
        }

        @keyframes twinkle {
            0%, 100% { opacity: 0.3; transform: scale(1); }
            50% { opacity: 1; transform: scale(1.2); }
        }

        @keyframes brightTwinkle {
            0%, 100% { opacity: 0.7; transform: scale(1); }
            50% { opacity: 1; transform: scale(1.5); }
        }

        @keyframes nebulaDrift {
            0% { transform: translateX(-20px) translateY(-10px) rotate(0deg); }
            100% { transform: translateX(20px) translateY(10px) rotate(2deg); }
        }

        @keyframes shootingStar {
            0% { transform: translateX(-100px) translateY(-100px); opacity: 0; }
            10% { opacity: 1; }
            90% { opacity: 1; }
            100% { transform: translateX(300px) translateY(300px); opacity: 0; }
        }

        @keyframes galaxyRotate {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .cosmic-dust {
            position: absolute;
            width: 1px;
            height: 1px;
            background: rgba(255, 255, 255, 0.1);
            animation: dustFloat 15s ease-in-out infinite;
        }

        @keyframes dustFloat {
            0%, 100% { transform: translateY(0px) translateX(0px); }
            25% { transform: translateY(-20px) translateX(10px); }
            50% { transform: translateY(-10px) translateX(-5px); }
            75% { transform: translateY(-15px) translateX(15px); }
        }

        .black-hole {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 120px;
            height: 120px;
            z-index: 10;
        }

        .event-horizon {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 60px;
            height: 60px;
            background: radial-gradient(circle, #000000 0%, #111111 70%, transparent 100%);
            border-radius: 50%;
            box-shadow: 
                0 0 20px rgba(0, 0, 0, 0.9),
                inset 0 0 20px rgba(0, 0, 0, 1);
            z-index: 15;
        }

        .accretion-disk {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 200px;
            height: 200px;
            border-radius: 50%;
            background: conic-gradient(
                from 0deg,
                transparent 0deg,
                rgba(255, 100, 0, 0.8) 45deg,
                rgba(255, 200, 0, 0.9) 90deg,
                rgba(100, 200, 255, 0.8) 135deg,
                rgba(0, 150, 255, 0.7) 180deg,
                rgba(255, 100, 0, 0.6) 225deg,
                rgba(255, 200, 0, 0.8) 270deg,
                rgba(100, 200, 255, 0.7) 315deg,
                transparent 360deg
            );
            animation: diskRotate 8s linear infinite;
            z-index: 5;
        }

        .accretion-disk::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 70px;
            height: 70px;
            background: radial-gradient(circle, transparent 0%, transparent 100%);
            border-radius: 50%;
            z-index: 10;
        }

        .gravitational-lensing {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 300px;
            height: 300px;
            border-radius: 50%;
            background: radial-gradient(
                circle,
                transparent 0%,
                rgba(100, 200, 255, 0.1) 20%,
                transparent 40%,
                rgba(255, 100, 0, 0.05) 60%,
                transparent 80%
            );
            animation: lensDistortion 12s ease-in-out infinite;
            z-index: 2;
        }

        .relativistic-jet {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 4px;
            height: 400px;
            background: linear-gradient(
                to bottom,
                transparent 0%,
                rgba(100, 200, 255, 0.8) 10%,
                rgba(255, 255, 255, 0.9) 45%,
                rgba(255, 255, 255, 0.9) 55%,
                rgba(100, 200, 255, 0.8) 90%,
                transparent 100%
            );
            animation: jetPulse 3s ease-in-out infinite;
            z-index: 3;
        }

        .relativistic-jet:nth-child(2) {
            transform: translate(-50%, -50%) rotate(180deg);
        }

        .photon-sphere {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 140px;
            height: 140px;
            border: 2px solid rgba(255, 255, 255, 0.2);
            border-radius: 50%;
            animation: photonOrbit 6s linear infinite;
            z-index: 4;
        }

        .hawking-radiation {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 80px;
            height: 80px;
            border-radius: 50%;
            background: radial-gradient(circle, transparent 0%, rgba(255, 255, 255, 0.05) 100%);
            animation: hawkingGlow 4s ease-in-out infinite;
            z-index: 6;
        }

        @keyframes diskRotate {
            0% { transform: translate(-50%, -50%) rotate(0deg); }
            100% { transform: translate(-50%, -50%) rotate(360deg); }
        }

        @keyframes lensDistortion {
            0%, 100% { transform: translate(-50%, -50%) scale(1); opacity: 0.3; }
            50% { transform: translate(-50%, -50%) scale(1.1); opacity: 0.6; }
        }

        @keyframes jetPulse {
            0%, 100% { opacity: 0.6; transform: translate(-50%, -50%) scaleY(1); }
            50% { opacity: 1; transform: translate(-50%, -50%) scaleY(1.2); }
        }

        @keyframes photonOrbit {
            0% { transform: translate(-50%, -50%) rotate(0deg); border-color: rgba(255, 255, 255, 0.2); }
            25% { border-color: rgba(100, 200, 255, 0.4); }
            50% { transform: translate(-50%, -50%) rotate(180deg); border-color: rgba(255, 200, 100, 0.4); }
            75% { border-color: rgba(255, 100, 100, 0.4); }
            100% { transform: translate(-50%, -50%) rotate(360deg); border-color: rgba(255, 255, 255, 0.2); }
        }

        @keyframes hawkingGlow {
            0%, 100% { opacity: 0.3; transform: translate(-50%, -50%) scale(1); }
            50% { opacity: 0.7; transform: translate(-50%, -50%) scale(1.1); }
        }
    </style>
</head>
<body>
    <div class="starfield">
        <div class="nebula"></div>
        <div class="galaxy-cluster" style="top: 10%; left: 70%; width: 150px; height: 150px;"></div>
        <div class="galaxy-cluster" style="top: 60%; left: 20%; width: 100px; height: 100px;"></div>
    </div>

    <script>
        function createStars() {
            const starfield = document.querySelector('.starfield');
            const starCount = 300;
            
            for (let i = 0; i < starCount; i++) {
                const star = document.createElement('div');
                star.className = 'star';
                
                // Random position
                star.style.left = Math.random() * 100 + '%';
                star.style.top = Math.random() * 100 + '%';
                
                // Random size and type
                const rand = Math.random();
                if (rand < 0.7) {
                    star.classList.add('small');
                } else if (rand < 0.9) {
                    star.classList.add('medium');
                } else {
                    star.classList.add('large');
                }
                
                // Special star types
                if (Math.random() < 0.1) {
                    star.classList.add('blue');
                } else if (Math.random() < 0.05) {
                    star.classList.add('bright');
                }
                
                // Random animation delay
                star.style.animationDelay = Math.random() * 2 + 's';
                star.style.animationDuration = (Math.random() * 3 + 2) + 's';
                
                starfield.appendChild(star);
            }
        }

        function createCosmicDust() {
            const starfield = document.querySelector('.starfield');
            const dustCount = 50;
            
            for (let i = 0; i < dustCount; i++) {
                const dust = document.createElement('div');
                dust.className = 'cosmic-dust';
                dust.style.left = Math.random() * 100 + '%';
                dust.style.top = Math.random() * 100 + '%';
                dust.style.animationDelay = Math.random() * 15 + 's';
                starfield.appendChild(dust);
            }
        }

        function createShootingStar() {
            const starfield = document.querySelector('.starfield');
            const shootingStar = document.createElement('div');
            shootingStar.className = 'shooting-star';
            
            // Random starting position (off-screen)
            shootingStar.style.left = Math.random() * 100 + '%';
            shootingStar.style.top = Math.random() * 50 + '%';
            
            // Animation
            shootingStar.style.animation = 'shootingStar 3s linear forwards';
            
            starfield.appendChild(shootingStar);
            
            // Remove after animation
            setTimeout(() => {
                if (shootingStar.parentNode) {
                    shootingStar.parentNode.removeChild(shootingStar);
                }
            }, 3000);
        }

        // Initialize
        createStars();
        createCosmicDust();
        
        // Create shooting stars periodically
        setInterval(createShootingStar, 8000 + Math.random() * 12000);
        
        // Add mouse interaction
        document.addEventListener('mousemove', (e) => {
            const stars = document.querySelectorAll('.star');
            const mouseX = e.clientX / window.innerWidth;
            const mouseY = e.clientY / window.innerHeight;
            
            stars.forEach((star, index) => {
                if (index % 10 === 0) { // Only affect every 10th star for performance
                    const offsetX = (mouseX - 0.5) * 20;
                    const offsetY = (mouseY - 0.5) * 20;
                    star.style.transform = `translate(${offsetX}px, ${offsetY}px)`;
                }
            });
        });

        // Add click interaction to create burst of stars
        document.addEventListener('click', (e) => {
            const x = e.clientX;
            const y = e.clientY;
            
            for (let i = 0; i < 5; i++) {
                const burstStar = document.createElement('div');
                burstStar.className = 'star bright';
                burstStar.style.position = 'fixed';
                burstStar.style.left = x + 'px';
                burstStar.style.top = y + 'px';
                burstStar.style.pointerEvents = 'none';
                burstStar.style.animation = 'brightTwinkle 1s ease-out forwards';
                
                document.body.appendChild(burstStar);
                
                setTimeout(() => {
                    if (burstStar.parentNode) {
                        burstStar.parentNode.removeChild(burstStar);
                    }
                }, 1000);
            }
        });
    </script>
</body>
</html>